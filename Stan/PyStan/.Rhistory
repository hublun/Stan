df$y[col]
df$p[col]
#============================================ Model ======================================================
remove(sm0)
sm0 = stan_model("NLP0.stan")
#============================================ Model ======================================================
remove(sm0)
sm0 = stan_model("NLP0.stan")
#=========================================================================================================
remove(fit0)
fit0 = sampling(object = sm0, data=dl0,
init=list(list(lambda =lamba0), list(lambda=lamba0), list(lambda=lamba0), list(lambda=lamba0)),
control=list(adapt_delta = 0.95),
chains=4, iter=999, warmup=444, thin=1)
#========================================================================================================
traceplot(fit0, pars=c("lambda", "mse"))
pairs(fit0, pars=c("lambda","mse"))
print(fit0)
plot(fit0, pars = c("lambda"), show_density=FALSE)
plot(fit0, pars = c("yp[1]","yp[12345]"), show_density=FALSE)
plot(fit0, pars = c("mse"), show_density=TRUE)
summary(fit0)
sims = extract(fit0, permuted=TRUE) # extract with no chain dimension
fdf = as.data.frame(fit0)
fdf$mse
class(sims)
sims$lambda
sims$mse
sims$yp[1:N]
length(sims$yp)/4/N
#=========================================================
class(sims$yp)
mtx = sims$yp
nrow(mtx) # iterations
ncol(mtx) # number of parameters
#=========================================================
max_mtx = max(mtx)
for (i in 1:ncol(mtx)){
if (max(mtx[,i]) == max_mtx) {
print(i)
}
}
max_mtx
for (i in 1:ncol(mtx)){
if (max(mtx[,i]) == max_mtx) {
print(i)
}
}
#===========================
col = 11049
mtx[,col]
df$y[col]
df$p[col]
#============================================ Model ======================================================
remove(sm0)
sm0 = stan_model("NLP0.stan")
#=========================================================================================================
remove(fit0)
fit0 = sampling(object = sm0, data=dl0,
init=list(list(lambda =lamba0), list(lambda=lamba0), list(lambda=lamba0), list(lambda=lamba0)),
control=list(adapt_delta = 0.95),
chains=4, iter=999, warmup=444, thin=1)
#========================================================================================================
traceplot(fit0, pars=c("lambda", "mse"))
pairs(fit0, pars=c("lambda","mse"))
print(fit0)
plot(fit0, pars = c("lambda"), show_density=FALSE)
plot(fit0, pars = c("yp[1]","yp[12345]"), show_density=FALSE)
plot(fit0, pars = c("mse"), show_density=TRUE)
summary(fit0)
sims = extract(fit0, permuted=TRUE) # extract with no chain dimension
fdf = as.data.frame(fit0)
fdf$mse
class(sims)
sims$lambda
sims$mse
sims$yp[1:N]
length(sims$yp)/4/N
#=========================================================
class(sims$yp)
mtx = sims$yp
nrow(mtx) # iterations
ncol(mtx) # number of parameters
#=========================================================
max_mtx = max(mtx)
max_mtx
for (i in 1:ncol(mtx)){
if (max(mtx[,i]) == max_mtx) {
print(i)
}
}
#===========================
col = 2127
mtx[,col]
df$y[col]
df$p[col]
#============================================ Model ======================================================
remove(sm741)
sm741 = stan_model("NLP741_1.stan")
#=========================================================================================================
remove(fit741)
fit741 = sampling(object = sm741, data=dl_1,
init=list(list(lambda =lambda1$x), list(lambda=lambda1$x), list(lambda=lambda1$x), list(lambda=lambda1$x)),
control=list(adapt_delta = 0.95), chains=4, iter=999, warmup=444, thin=1)
#========================================================================================================
traceplot(fit741, pars=c("mse"))
pairs(fit741, pars=c("lambda[1]","lambda[2]", "lambda[741]"))
print(fit741)
plot(fit741, pars = c("lambda[1]","lambda[741]"), show_density=FALSE)
plot(fit741, pars = c("yp[1]","yp[2]","yp[3]","yp[4]","yp[12345]"), show_density=FALSE)
plot(fit741, pars = c("mse"), show_density=TRUE)
summary(fit741)
sims = extract(fit741, permuted=TRUE)
class(sims)
sims$lambda
sims$mse
#=========================================================
class(sims$yp)
mtx = sims$yp
nrow(mtx) # iterations
ncol(mtx) # number of parameters
max(mtx)
min(mtx)
mean(mtx)
median(mtx)
max(mtx[,2])
#=============================================================
max_mtx = max(mtx)
for (i in 1:ncol(mtx)){
if (max(mtx[,i]) == max_mtx) {
print(i)
}
}
#===========================
col = 20431
mtx[,col]
df$y[col]
df$p[col]
#===========================
col = 6986
mtx[,col]
df$y[col]
df$p[col]
plot(fit741, pars = c("lambda[133]","lambda[741]"), show_density=FALSE)
plot(fit741, pars = c("yp[133]","yp[2]","yp[3]","yp[4]","yp[12345]"), show_density=FALSE)
lambda1
lambda1 <- 10*aggregate.data.frame(x=df$y, by=list(df$p), FUN=mean)
lambda1
dl_1 = list(N = length(df$y), y = df$y, P=length(unique(df$pid)), xp=df$p)
#============================================ Model ======================================================
remove(sm741)
sm741 = stan_model("NLP741_1.stan")
#=========================================================================================================
remove(fit741)
fit741 = sampling(object = sm741, data=dl_1,
init=list(list(lambda =lambda1$x), list(lambda=lambda1$x), list(lambda=lambda1$x), list(lambda=lambda1$x)),
control=list(adapt_delta = 0.95), chains=4, iter=999, warmup=444, thin=1)
#========================================================================================================
traceplot(fit741, pars=c("mse"))
pairs(fit741, pars=c("lambda[1]","lambda[2]", "lambda[741]"))
print(fit741)
plot(fit741, pars = c("lambda[133]","lambda[741]"), show_density=FALSE)
plot(fit741, pars = c("yp[133]","yp[2]","yp[3]","yp[4]","yp[12345]"), show_density=FALSE)
plot(fit741, pars = c("mse"), show_density=TRUE)
summary(fit741)
sims = extract(fit741, permuted=TRUE)
class(sims)
sims$lambda
sims$mse
#=========================================================
class(sims$yp)
mtx = sims$yp
nrow(mtx) # iterations
ncol(mtx) # number of parameters
max(mtx)
min(mtx)
mean(mtx)
median(mtx)
max(mtx[,2])
#=============================================================
max_mtx = max(mtx)
for (i in 1:ncol(mtx)){
if (max(mtx[,i]) == max_mtx) {
print(i)
}
}
#===========================
col = 6986
mtx[,col]
df$y[col]
df$p[col]
#===========================
col = 20431
mtx[,col]
df$y[col]
df$p[col]
#=========================================================
pars = paste(col)
pars
#=========================================================
pars = paste("yp", col)
pars
#=========================================================
pars = paste("yp", col, sep='')
pars
#=========================================================
pars = paste("yp[", col,"]", sep='')
pars
#=========================================================
pars1 = paste("yp[", col,"]", sep='')
pars1
plot(fit741, pars=c(pars1))
pars2 = paste("lambda[",df$p[col],"]", sep='')
plot(fit741, pars=c(pars1, pars2))
plot(fit741, pars=c(pars1))
plot(fit741, pars=c(pars2))
lambda1 <- aggregate.data.frame(x=df$y, by=list(df$p), FUN=mean)
lambda1
dl_1 = list(N = length(df$y), y = df$y, P=length(unique(df$pid)), xp=df$p)
#============================================ Model ======================================================
remove(sm741)
sm741 = stan_model("NLP741_1.stan")
#=========================================================================================================
remove(fit741)
fit741 = sampling(object = sm741, data=dl_1,
init=list(list(lambda =lambda1$x), list(lambda=lambda1$x), list(lambda=lambda1$x), list(lambda=lambda1$x)),
control=list(adapt_delta = 0.95), chains=4, iter=999, warmup=444, thin=1)
#========================================================================================================
traceplot(fit741, pars=c("mse"))
pairs(fit741, pars=c("lambda[1]","lambda[2]", "lambda[741]"))
plot(fit741, pars = c("lambda[133]","lambda[741]"), show_density=FALSE)
plot(fit741, pars = c("yp[133]","yp[2]","yp[3]","yp[4]","yp[12345]"), show_density=FALSE)
plot(fit741, pars = c("mse"), show_density=TRUE)
summary(fit741)
sims = extract(fit741, permuted=TRUE)
class(sims)
sims$lambda
sims$mse
#=========================================================
class(sims$yp)
mtx = sims$yp
nrow(mtx) # iterations
ncol(mtx) # number of parameters
max(mtx)
min(mtx)
mean(mtx)
median(mtx)
max(mtx[,2])
#=============================================================
max_mtx = max(mtx)
for (i in 1:ncol(mtx)){
if (max(mtx[,i]) == max_mtx) {
print(i)
}
}
#===========================
col = 20431
mtx[,col]
df$y[col]
df$p[col]
#=========================================================
pars1 = paste("yp[", col,"]", sep='')
pars1
pars2 = paste("lambda[",df$p[col],"]", sep='')
plot(fit741, pars=c(pars1))
plot(fit741, pars=c(pars2))
#===========================
col = 4127
mtx[,col]
df$y[col]
df$p[col]
#=========================================================
pars1 = paste("yp[", col,"]", sep='')
pars1
pars2 = paste("lambda[",df$p[col],"]", sep='')
plot(fit741, pars=c(pars1))
plot(fit741, pars=c(pars2))
plot(fit741, pars=c(pars1))
#============================================ Model ======================================================
remove(sm741)
sm741 = stan_model("NLP741.stan")
#=========================================================================================================
remove(fit741)
fit741 = sampling(object = sm741, data=dl_1,
init=list(list(lambda =lambda1$x), list(lambda=lambda1$x), list(lambda=lambda1$x), list(lambda=lambda1$x)),
control=list(adapt_delta = 0.95), chains=4, iter=999, warmup=444, thin=1)
#========================================================================================================
traceplot(fit741, pars=c("mse"))
df$u = as.integer(df$uid)
lambda2 <- aggregate.data.frame(x=df$y, by=list(df$u), FUN=mean)
lambda1
lambda2
dl_2 = list(N = length(df$y), y = df$y, U=length(unique(df$uid)), xu=df$u)
#============================================ Model ======================================================
remove(sm741)
sm741 = stan_model("NLP1138.stan")
#=========================================================================================================
remove(fit741)
fit741 = sampling(object = sm741, data=dl_2,
init=list(list(lambda =lambda2$x), list(lambda=lambda2$x), list(lambda=lambda2$x), list(lambda=lambda2$x)),
control=list(adapt_delta = 0.95), chains=4, iter=999, warmup=444, thin=1)
#========================================================================================================
traceplot(fit741, pars=c("mse"))
pairs(fit741, pars=c("lambda[1]","lambda[2]", "lambda[741]"))
plot(fit741, pars = c("lambda[133]","lambda[741]"), show_density=FALSE)
plot(fit741, pars = c("yp[133]","yp[2]","yp[3]","yp[4]","yp[12345]"), show_density=FALSE)
plot(fit741, pars = c("mse"), show_density=TRUE)
summary(fit741)
sims = extract(fit741, permuted=TRUE)
class(sims)
sims$lambda
sims$mse
#=========================================================
class(sims$yp)
mtx = sims$yp
nrow(mtx) # iterations
ncol(mtx) # number of parameters
max(mtx)
min(mtx)
mean(mtx)
median(mtx)
max(mtx[,2])
#=============================================================
max_mtx = max(mtx)
for (i in 1:ncol(mtx)){
if (max(mtx[,i]) == max_mtx) {
print(i)
}
}
#===========================
col = 24896
mtx[,col]
df$y[col]
df$p[col]
#=========================================================
pars1 = paste("yp[", col,"]", sep='')
pars1
pars2 = paste("lambda[",df$p[col],"]", sep='')
plot(fit741, pars=c(pars1))
plot(fit741, pars=c(pars2))
#============================================ Model ======================================================
remove(sm1138)
sm1138 = stan_model("NLP1138.stan")
#============================================ Model ======================================================
remove(sm1138)
sm1138 = stan_model("NLP1138.stan")
#============================================ Model ======================================================
remove(sm1138)
sm1138 = stan_model("NLP1138.stan")
#=========================================================================================================
remove(fit1138)
fit1138 = sampling(object = sm1138, data=dl_2,
init=list(list(lambda =lambda2$x), list(lambda=lambda2$x), list(lambda=lambda2$x), list(lambda=lambda2$x)),
control=list(adapt_delta = 0.95), chains=4, iter=999, warmup=444, thin=1)
#========================================================================================================
traceplot(fit1138, pars=c("mse"))
#============================================ Model ======================================================
remove(sm1138)
sm1138 = stan_model("NLP1138.stan")
#=========================================================================================================
remove(fit1138)
fit1138 = sampling(object = sm1138, data=dl_2,
init=list(list(lambda =lambda2$x), list(lambda=lambda2$x), list(lambda=lambda2$x), list(lambda=lambda2$x)),
control=list(adapt_delta = 0.95), chains=4, iter=999, warmup=444, thin=1)
#========================================================================================================
traceplot(fit1138, pars=c("mse"))
pairs(fit1138, pars=c("lambda[1]", "lambda[1138]"))
plot(fit1138, pars = c("lambda[133]","lambda[1138]"), show_density=FALSE)
plot(fit1138, pars = c("yp[133]","yp[2]","yp[3]","yp[4]","yp[12345]"), show_density=FALSE)
plot(fit1138, pars = c("mse"), show_density=TRUE)
summary(fit1138)
sims = extract(fit1138, permuted=TRUE)
class(sims)
sims$lambda
sims$mse
#=========================================================
class(sims$yp)
mtx = sims$yp
nrow(mtx) # iterations
ncol(mtx) # number of parameters
max(mtx)
min(mtx)
mean(mtx)
median(mtx)
max(mtx[,2])
#=============================================================
max_mtx = max(mtx)
for (i in 1:ncol(mtx)){
if (max(mtx[,i]) == max_mtx) {
print(i)
}
}
#===========================
col = 24896
mtx[,col]
df$y[col]
df$p[col]
#=========================================================
pars1 = paste("yp[", col,"]", sep='')
pars1
pars2 = paste("lambda[",df$p[col],"]", sep='')
plot(fit741, pars=c(pars1))
plot(fit741, pars=c(pars2))
#============================================ Model ======================================================
remove(sm0)
sm0 = stan_model("NLP0.stan")
sm0 = stan_model("NLP0.stan")
#============================================ Model ======================================================
remove(sm0)
sm0 = stan_model("NLP0.stan")
library("rstan")
library("parallel")
#======================= threading and avoid recompile ========================
options(mc.cores = parallel::detectCores())
rstan_options(auto_write = TRUE)
#============================================ Model ======================================================
remove(sm0)
sm0 = stan_model("NLP0.stan")
#=========================================================================================================
remove(fit0)
fit0 = sampling(object = sm0, data=dl0,
init=list(list(lambda =lamba0), list(lambda=lamba0), list(lambda=lamba0), list(lambda=lamba0)),
control=list(adapt_delta = 0.95),
chains=4, iter=999, warmup=444, thin=1)
#========================================================================================================
traceplot(fit0, pars=c("lambda", "mse"))
sims = extract(fit0, permuted=TRUE) # extract with no chain dimension
#=========================================================
class(sims$yp)
mtx = sims$yp
nrow(mtx) # iterations
ncol(mtx) # number of parameters
#=========================================================
max_mtx = max(mtx)
max_mtx
for (i in 1:ncol(mtx)){
if (max(mtx[,i]) == max_mtx) {
print(i)
}
}
#===========================
col = 2127
mtx[,col]
df$y[col]
df$p[col]
#=========================================================
#=========================================================
max(mtx)
min(mtx)
mean(mtx)
median(mtx)
max(mtx[,2])
#=============================================================
max_mtx = max(mtx)
for (i in 1:ncol(mtx)){
if (max(mtx[,i]) == max_mtx) {
print(i)
}
}
#===========================
col = 20431
mtx[,col]
df$y[col]
df$p[col]
#============================================ Model ======================================================
remove(sm1138)
sm1138 = stan_model("NLP1138.stan")
#=========================================================================================================
remove(fit1138)
fit1138 = sampling(object = sm1138, data=dl_2,
init=list(list(lambda =lambda2$x), list(lambda=lambda2$x), list(lambda=lambda2$x), list(lambda=lambda2$x)),
control=list(adapt_delta = 0.95), chains=4, iter=999, warmup=444, thin=1)
#========================================================================================================
traceplot(fit1138, pars=c("mse"))
pairs(fit1138, pars=c("lambda[1]", "lambda[1138]"))
plot(fit1138, pars = c("lambda[133]","lambda[1138]"), show_density=FALSE)
plot(fit1138, pars = c("yp[133]","yp[2]","yp[3]","yp[4]","yp[12345]"), show_density=FALSE)
plot(fit1138, pars = c("mse"), show_density=TRUE)
summary(fit1138)
sims = extract(fit1138, permuted=TRUE)
class(sims)
sims$lambda
sims$mse
#=========================================================
class(sims$yp)
mtx = sims$yp
nrow(mtx) # iterations
ncol(mtx) # number of parameters
max(mtx)
min(mtx)
mean(mtx)
median(mtx)
max(mtx[,2])
#=============================================================
max_mtx = max(mtx)
for (i in 1:ncol(mtx)){
if (max(mtx[,i]) == max_mtx) {
print(i)
}
}
#===========================
col = 24896
mtx[,col]
df$y[col]
df$p[col]
#=========================================================
pars1 = paste("yp[", col,"]", sep='')
pars1
pars2 = paste("lambda[",df$p[col],"]", sep='')
plot(fit741, pars=c(pars1))
plot(fit741, pars=c(pars2))
plot(fit741, pars=c(pars1))
